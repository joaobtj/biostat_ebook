[{"path":"index.html","id":"prefácio","chapter":"Prefácio","heading":"Prefácio","text":"Este é um livro utilizado como texto-base para disciplina de Bioestatística Programa de Pós-Graduação em Ecossistemas Agrícolas e Naturais da Universidade Federal de Santa Catarina (UFSC) Campus de Curitibanos.","code":""},{"path":"index.html","id":"sessão","chapter":"Prefácio","heading":"Sessão","text":"version book built R version 4.2.0 (2022-04-22) following packages:","code":""},{"path":"intro-r.html","id":"intro-r","chapter":"Introdução - O ecossistema R","heading":"Introdução - O ecossistema R","text":"O R (www.r-project.org) é uma linguagem de programação open-source, distribuído sob licença GNU, e multiplataforma, disponível para Windows, MacOS e algumas distribuições Linux. Embora esteja se tornando cada vez mais de uso geral, ele foi originalmente concebido como uma linguagem de programação estatística. Dessa forma, além de análises estatísticas, é capaz de produzir representações gráficas de altíssima qualidade, além de relatórios.Foi criado por Ross Ihaka e Robert Gentleman1 na Universidade de Auckland, Nova Zelândia. Atualmente, é desenvolvido pela R Foundation.É amplamente utilizado pelas grandes empresas, órgãos governamentais e, claro, na pesquisa acadêmica.popularidade R nas ciências tem sido demonstrada por diversos estudos, como o de LAI et al. (2019), em que os autores analisaram mais de 60 mil artigos publicados nos principais periódicos da área de Ecologia e observaram um aumento linear uso R como ferramenta principal para análise de dados.","code":""},{"path":"intro-r.html","id":"pacotes-do-r","chapter":"Introdução - O ecossistema R","heading":"Pacotes do R","text":"O R conta com uma comunidade grande e ativa (useR!) que está sempre contribuindo com melhoria programa por meio desenvolvimento de pacotes que estendem funções originais da linguagem R. Atualmente, 2 o site CRAN (Comprehensive R Archive Network) conta com mais de 18 mil3 pacotes para o R.Os pacotes disponíveis CRAN são facilmente instalados por meio de funções disponiveis próprio R. Também há possibilidade de instalar pacotes diretamente GitHub, local em que muitos dos desenvolvedores de pacotes open-source hospedam seus trabalhos.","code":""},{"path":"intro-r.html","id":"rstudio","chapter":"Introdução - O ecossistema R","heading":"RStudio","text":"O RStudio é um ambiente de desenvolvimento integrado - IDE4 com versão open-source e comercial.Foi desenvolvido para aumentar produtividade dos usuários. Inclui um console, um editor com destaque visual com suporte execução direta código, e ferramentas para manejar arquivos, plotagens, histórico, entre outros.","code":""},{"path":"intro-r.html","id":"rcloud","chapter":"Introdução - O ecossistema R","heading":"RStudio Cloud","text":"É uma versão RStudio que pode ser acessado via navegador, de modo que nada precisa ser instalado na máquina localmente.Além de poder utilizar todas funcionalidades R e RStudio, com o RStudio Cloud é mais fácil compartilhar os projetos com sua equipe.Para começar utilizar, basta criar uma conta site rstudio.cloud. Existe uma conta gratuita que pode ser suficiente para usuários ocasionais. Para quem necessitar, existem também planos pagos.","code":""},{"path":"intro-r.html","id":"tidyverse","chapter":"Introdução - O ecossistema R","heading":"Tidyverse","text":"O universo Tidyverse é uma coleção de pacotes para o R elaborados para ciência dos dados (data science). Todos os pacotes compartilham uma filosofia, gramática e estrutura de dados. funções facilitam comunicação entre humanos e máquina em comparação com funções básicas R.Para instalar todos os pacotes tidyverse:Entre os principais pacotes tidyverse estão:ggplot2: criar gráficos de altíssima qualidade;dplyr: manipulação de dados;tidyr: organização de dados;readr: leitura de arquivos externos, como csv;purrr: programação funcional, permite substituir os loops convencionais;tibble: reinterpretação quadro de dados (data-frame) original;stringr: trabalhar com textos (strings);forcats: trabalhar com fatores (factor).Existem ainda muitos outros pacotes que podem ser consultados aqui: www.tidyverse.org/packages","code":"\ninstall.packages(\"tidyverse\")"},{"path":"intro-r.html","id":"rmarkdown","chapter":"Introdução - O ecossistema R","heading":"RMarkdown","text":"O Markdown é uma linguagem de marcação em texto puro (plain text), em que são utilizadas marcações (muito sutis) para títulos, links e formatações em geral. Seu resultado é bastante legível mesmo sem processamento, diferente de outras linguagens, como HTML ou Latex que requerem muitas tags para formatar o texto.Uma extensão Markdown original é linguagem RMarkdown. Esta é uma poderosa ferramenta que permite combinar análises e os relatórios em um mesmo documento, pois permite incluir códigos em R ao longo documento.De modo geral, o pacote knitr executa os códigos em R e converte o documento de RMarkdown para Markdown. O pacote pandoc renderiza o documento Markdown para o formato desejado, que pode ser HTML, PDF, Word, entre muitos outros.\nMais informações podem ser encontradas em: R Markdown: Definitive Guide e R Markdown Cookbook","code":""},{"path":"procurando-e-pedindo-ajuda-para-o-r.html","id":"procurando-e-pedindo-ajuda-para-o-r","chapter":"Capítulo 1 Procurando (e pedindo) ajuda para o R","heading":"Capítulo 1 Procurando (e pedindo) ajuda para o R","text":"Antes de pedir ajuda, é sempre uma boa prática estudar para tentar resolver por si mesmo. grande maioria dos pacotes e funções R possuem uma boa documentação com exemplos de utilização. Também há diversos fóruns na web especializados com respostas para perguntas mais frequente e sites com tutoriais detalhados.Infelizmente, muitos dos textos de ajuda estão na língua inglesa. Aproveite esta chance para treinar e melhorar sua leitura em inglês.","code":""},{"path":"procurando-e-pedindo-ajuda-para-o-r.html","id":"as-funções-help-e","chapter":"Capítulo 1 Procurando (e pedindo) ajuda para o R","heading":"1.1 As funções help e ?","text":"funções help e ? fornecem acesso à documentação próprio R e são equivalentes entre si.Experimente digitar ?sum para ver documentação desta função:\nFigura 1.1: Ajuda da função sum\nNa documentação, é usual haver uma parte com exemplos de uso da função. Estes exemplos podem ser executados com função example:","code":"\nexample(sum) ## \n## sum> ## Pass a vector to sum, and it will add the elements together.\n## sum> sum(1:5)\n## [1] 15\n## \n## sum> ## Pass several numbers to sum, and it also adds the elements.\n## sum> sum(1, 2, 3, 4, 5)\n## [1] 15\n## \n## sum> ## In fact, you can pass vectors into several arguments, and everything gets added.\n## sum> sum(1:2, 3:5)\n## [1] 15\n## \n## sum> ## If there are missing values, the sum is unknown, i.e., also missing, ....\n## sum> sum(1:5, NA)\n## [1] NA\n## \n## sum> ## ... unless  we exclude missing values explicitly:\n## sum> sum(1:5, NA, na.rm = TRUE)\n## [1] 15"},{"path":"procurando-e-pedindo-ajuda-para-o-r.html","id":"stack-overflow","chapter":"Capítulo 1 Procurando (e pedindo) ajuda para o R","heading":"1.2 Stack Overflow","text":"O stackoverflow.com é um site bem organizado especializado na discussão de assuntos relativos à programação. Tópicos marcados com tag “r” chegam mais de 440 mil 5. Para acessar todos os tópicos com tag “r”, acesse stackoverflow.com/questions/tagged/r.Este site tem vantagem de ser bem fácil de fazer buscas. Tente digitar, na caixa de buscas, seguinte expressão: [r] logistic regression fit6\nFigura 1.2: Busca site (stackoverflow.com)[(https://stackoverflow.com]\n","code":""},{"path":"procurando-e-pedindo-ajuda-para-o-r.html","id":"ajuda-professor","chapter":"Capítulo 1 Procurando (e pedindo) ajuda para o R","heading":"1.3 Pedir ajuda ao seu professor","text":"Antes de tudo, vou mostrar um exemplo de como não pedir ajuda ao professor (Figura 1.3:\nFigura 1.3: É difícil ajudar com uma foto da tela com baixa qualidade\nÉ muito difícil conseguir ajudar baseado apenas em uma foto da tela, ainda mais de baixa qualidade e difícil de ler/entender.7Formular uma boa pergunta é 90% desafio e, muitas vezes, o processo de formular pergunta já fornece própria resposta.Para conseguir ajuda mais rápida e com maior chance de ser adequadamente respondida, siga alguma destas recomendações:Compacte8 e compartilhe todo o diretório seu projeto;Compartilhe seu projeto RStudio Cloud (Seção ??);Utilize o pacote reprex (Seção 1.4).","code":""},{"path":"procurando-e-pedindo-ajuda-para-o-r.html","id":"reprex","chapter":"Capítulo 1 Procurando (e pedindo) ajuda para o R","heading":"1.4 O pacote reprex","text":"Reprex é sigla para reproducible example, ou exemplo reproduzível. O código que você deseja compartilhar deve ser renderizado dentro da função reprex::reprex, como código completo dentro de chaves { }.Esta função cria um arquivo renderizado com o exemplo e também envia o resultado direto para área de transferência para poder ser colado com o Ctrl + V.O resultado da função acima pode ser visto abaixo:","code":"\nreprex::reprex({\n  y <- c(1,2,3,4,\"a\")\n  mean(y)\n})\ny <- c(1,2,3,4,\"a\")\nmean(y)\n#> Warning in mean.default(y): argumento não é numérico nem lógico: retornando NA\n#> [1] NA"},{"path":"comeco.html","id":"comeco","chapter":"Capítulo 2 Começando com o R","heading":"Capítulo 2 Começando com o R","text":"Neste capítulo, vamos iniciar com o uso R e RStudio.","code":""},{"path":"comeco.html","id":"a-interface-do-rstudio","chapter":"Capítulo 2 Começando com o R","heading":"2.1 A interface do RStudio","text":"O RStudio possui uma interface simples mas bastante funcional para trabalhar com códigos R.São quatro janelas principais como pode ser visto na Figura 2.1.\nFigura 2.1: Interface RStudio\nSource (Editor) (canto superior esquerdo): local para editar scripts, que são sequências de comandos que podem ser salvos e utilizados repetidamente. Os comandos desta janela são executados clicando botão Run ou pelo atalho teclado Ctrl+Enter. Caso o editor não esteja aparecendo, clique em File -> New File -> R Script, ou pelo atalho Ctrl+Shift+NSource (Editor) (canto superior esquerdo): local para editar scripts, que são sequências de comandos que podem ser salvos e utilizados repetidamente. Os comandos desta janela são executados clicando botão Run ou pelo atalho teclado Ctrl+Enter. Caso o editor não esteja aparecendo, clique em File -> New File -> R Script, ou pelo atalho Ctrl+Shift+NConsole (canto inferior esquerdo): local para digitar e executar os comandos, assim como obter o resultado destes. Também mostra o resutado dos comando executados partir editor.Console (canto inferior esquerdo): local para digitar e executar os comandos, assim como obter o resultado destes. Também mostra o resutado dos comando executados partir editor.Environment (Ambiente) (canto superior direito): local que mostra variáveis definidas, entre outros.Environment (Ambiente) (canto superior direito): local que mostra variáveis definidas, entre outros.Files/Plots/Packages/Help/Viewer (canto inferior direito): local multiuso com várias abas, que mostra e configura várias opções, como arquivos, gráficos, pacotes, ajuda e visualização.Files/Plots/Packages/Help/Viewer (canto inferior direito): local multiuso com várias abas, que mostra e configura várias opções, como arquivos, gráficos, pacotes, ajuda e visualização.","code":""},{"path":"comeco.html","id":"criar-um-projeto-no-rstudio","chapter":"Capítulo 2 Começando com o R","heading":"2.2 Criar um projeto no RStudio","text":"Um projeto RStudio mantem todos os arquivos relevantes para análise, como banco de dados, scripts, resultados e figuras. É uma excelente maneira de evitar ter de lidar com caminhos e diretórios.Para começar um novo projeto, clique em File -> New Project e siga os passos nas janelas conforme aparecerem:Dê um bom nome para seu novo projeto e cuide local em que este será salvo.","code":""},{"path":"comeco.html","id":"primeiros-códigos","chapter":"Capítulo 2 Começando com o R","heading":"2.3 Primeiros códigos","text":"Após o projeto criado, vamos digitar os primeiros códigos na janela Script. Tente digitar o seguinte:Em seguida, posicione o cursor na linha que acabou de digitar, aperte o botao Run ou Ctrl + Enter e veja o resultado.Esta foi uma operação muito simples, então vamos ver alguns códigos mais interessantes.Para criar um objeto e atribuir um valor ele, primeiro precisamos dar um nome9 ao objeto, seguido símbolo de atribuição <- (atalho: Alt + - ) 10 e valor que desejamos atribuir ao objeto:Neste exemplo, o objeto denominado xrecebeu o valor 10. Notem que ao executar este comando, o objeto recém criado aparece na janela Environment, confirmando criação objeto.Este exemplo também mostrou como usar um comentário, que é um texto não interpretado pelo programa. Os comentários são bastante úteis para explicar linhas de código. Os comentários são escritos após o símbolo #. Para comentar uma ou várias linhas, selecione o texto e aperte Ctrl+Shift+C.Para verificar o valor que está atribuído um objeto, basta digitar o nome objeto11:Um objeto pode ter seu valor modificado ou copiado com uma nova atribuição:Observe que ordem de execução dos comandos é importante resultado.Um dos objetos mais útil na programação em R é o vetor, que pode ser entendido como uma série de valores armazenada em um objeto. Para criar um vetor, utilizamos função c():função str nos mostra estrutura vetor:indicando que o objeto primos6 é um vetor numérico (num).Uma parte vetor pode ser extraída como uso de colchetes [ ]:operações com vetores são aplicadas todos os elementos dele:Calcular média dos valores deste vetor com função mean:Muitas funções são disponibilizadas em pacotes. Para acessar uma função de um pacote usamos sintaxe pacote::função. Por exemplo, para acessar funções first e last pacote dplyr:Alternativamente, é possível carregar o pacote com função library e depois usar funções diretamente:Para criar uma gráfico, podemos usar várias das funções base R para esse fim. Neste exemplo, função hist cria um gráfico tipo histograma para um conjunto de 10.000 valores gerados aleatoriamente pela função rnorm.Na seção ?? veremos como utilizar o pacote ggplot2 para criar gráficos mais elaborados.","code":"\n1 + 1\n1 + 1## [1] 2\nx <- 10 # leia-se: x recebe o valor 10\nx## [1] 10\ny <- x\nx <- x * 2\nz <- x + y\n\ny## [1] 10\nx## [1] 20\nz## [1] 30\nprimos6 <- c(2, 3, 5, 7, 11, 13)\nprimos6## [1]  2  3  5  7 11 13\nstr(primos6)##  num [1:6] 2 3 5 7 11 13\nprimos6[3] # acessa o terceiro elemento do vetor## [1] 5\nprimos6[4:6] # acessa do 4° ao 6° elemento do vetor## [1]  7 11 13\nprimos6^2## [1]   4   9  25  49 121 169\nmean(primos6)## [1] 6.833333\ndplyr::first(primos6)## [1] 2\ndplyr::last(primos6)## [1] 13\nlibrary(dplyr)## \n## Attaching package: 'dplyr'## The following objects are masked from 'package:stats':\n## \n##     filter, lag## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union\nfirst(primos6)## [1] 2\nlast(primos6)## [1] 13\nr <- rnorm(10000)\nhist(r)"},{"path":"comeco.html","id":"criar-uma-função-no-r","chapter":"Capítulo 2 Começando com o R","heading":"2.4 Criar uma função no R","text":"Funções são usadas para dividir o código em partes mais simples, mas fáceis de manter e de entender. funções também são facilmente reutilizadas.Para criar uma função R, sintaxe é seguinte:Como exemplo, vamos criar uma função que simula o lançamento dado: dado6Esta função retorna n valores entre 1 e 6 com substituição.Para utilizar função recém criada, chamamos ela pelo nome e passamos um valor para os argumentos:","code":"\nnome_funcao <- function (argumentos) {\ndeclaração\n}\ndado6 <- function(n) {\n  sample(1:6, size = n, replace = TRUE)\n}\ndado6(n = 1)## [1] 1\ndado6(n = 3)## [1] 4 3 2"},{"path":"comeco.html","id":"data-frame","chapter":"Capítulo 2 Começando com o R","heading":"2.5 Data-frame","text":"O data frame é uma estrutura bidimensional em que cada componente forma uma coluna e o conteúdo de cada componente forma linhas. Em um data frame, é importante que todas colunas tenham o mesmo commprimento, de modo que estrutura de dados resulte em um formato retangular. Também podemos imaginá-lo como um agrupamento de vetores de mesmo tamanho.Para criá-lo, usamos função data.frameIdem ao anterior, mas com os vetores sendo criado anteriormente e separadamenteO pacote tibble foi criado como uma atualização12 data-frame, e pode ser utilizado de maneira similar:O data-frame é o formato adequado para armazenar os dados formato Tidy Data, junto com o tibble (seção 2.8)","code":"\ndf <- data.frame(\n  x = c(\"a\", \"b\", \"c\"),\n  y = c(16, 32, 64)\n)\ndf##   x  y\n## 1 a 16\n## 2 b 32\n## 3 c 64\nx <- c(\"a\", \"b\", \"c\")\ny <- c(16, 32, 64)\ndf <- data.frame(x, y)\ndf##   x  y\n## 1 a 16\n## 2 b 32\n## 3 c 64\ntb <- tibble::tibble(\n  x = c(\"a\", \"b\", \"c\"),\n  y = c(16, 32, 64)\n)\ntb## # A tibble: 3 × 2\n##   x         y\n##   <chr> <dbl>\n## 1 a        16\n## 2 b        32\n## 3 c        64"},{"path":"comeco.html","id":"data-frames-nativos-no-r","chapter":"Capítulo 2 Começando com o R","heading":"2.5.1 Data-frames nativos no R","text":"Existe uma grande quantidade de data-frames pré instalados R que não necessitam de importação. Alguns dos nossos exemplos irão usar alguns destes data-frames, por exemplo, o data-frame iris, que contém medidas, em centímetros, comprimento e largura das pétalas e sépalas de três espécies de plantas: Iris setosa, . versicolor e . virginica.","code":""},{"path":"comeco.html","id":"importando-dados-para-o-r","chapter":"Capítulo 2 Começando com o R","heading":"2.6 Importando dados para o R","text":"É muito comum que os dados que utilizaremos em nossas análises estejam armazenadas em fontes externas ao R, como arquivos de texto (*.csv, *.tsv, *.txt), planilhas (*.xlsx, *.ods) ou mesmo grandes bases de dados da internet. importação consiste na leitura destas fontes para um data-frame R.Apesar de existirem vários pacotes e funções para importação de arquivos, vamos apresentar aqueles que fazem parte tidyverse","code":""},{"path":"comeco.html","id":"importar-arquivos-.csv","chapter":"Capítulo 2 Começando com o R","heading":"2.6.1 Importar arquivos .csv","text":"Os arquivos *.csv (comma-separated values) estão entre os mais populares para distribuição de dados. É um arquivo de texto, cujos valores são delimitador por vírgula.O pacote readr possui função read_csv para importação destes arquivos, cujo delimitador entre valores é vírgula e o separador de decimal é o ponto. Outra função semelhante, read_csv2 importa arquivos .csv cujo delimitador entre valores é o ponto e vírgula e o separador de decimal é vírgula13, mais comum em alguns países como o Brasil.O arquivo cbs_jul19.csv (Figura 2.2) contém temperaturas mínimas e máximas diárias para cidade de Curitibanos-SC registradas nos primeiros 15 dias mês de julho de 2019.\nFigura 2.2: Arquivo *.csv cujo delimitador entre valores é vírgula e o separador de decimal é o ponto.\nOs mesmos dados, mas em um arquivo (cbs2_jul19.csv - Figura 2.3) cujo delimitador de valores é o ponto e vírgula e o separador de decimal é vírgula:\nFigura 2.3: Arquivo *.csv cujo delimitador entre valores é o ponto e vírgula e o separador de decimal é vírgula\nimportação com função read_csv é feita como exemplo abaixo:E com função csv2:","code":"\ntemperaturas <- readr::read_csv(\"data/cbs_jul19.csv\")## Rows: 14 Columns: 3\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \",\"\n## dbl  (2): temp_min, temp_max\n## date (1): data\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\ntemperaturas## # A tibble: 14 × 3\n##    data       temp_min temp_max\n##    <date>        <dbl>    <dbl>\n##  1 2019-07-01     10.7     17.1\n##  2 2019-07-02     11       15  \n##  3 2019-07-03      5.9     14.8\n##  4 2019-07-04     -0.3     12.1\n##  5 2019-07-05     -0.8      7.1\n##  6 2019-07-06     -3.3      8.6\n##  7 2019-07-07     -4.4     13.6\n##  8 2019-07-08      2.1     19.2\n##  9 2019-07-09      0       22.5\n## 10 2019-07-10      2       19.5\n## 11 2019-07-11      4.3     21.4\n## 12 2019-07-12      8.7     23.3\n## 13 2019-07-13     12.9     23.1\n## 14 2019-07-14     13       17.4\ntemperaturas <- readr::read_csv2(\"data/cbs2_jul19.csv\")## ℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.## Rows: 14 Columns: 3\n## ── Column specification ────────────────────────────────────────────────────────\n## Delimiter: \";\"\n## dbl  (2): temp_min, temp_max\n## date (1): data\n## \n## ℹ Use `spec()` to retrieve the full column specification for this data.\n## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\ntemperaturas## # A tibble: 14 × 3\n##    data       temp_min temp_max\n##    <date>        <dbl>    <dbl>\n##  1 2019-07-01     10.7     17.1\n##  2 2019-07-02     11       15  \n##  3 2019-07-03      5.9     14.8\n##  4 2019-07-04     -0.3     12.1\n##  5 2019-07-05     -0.8      7.1\n##  6 2019-07-06     -3.3      8.6\n##  7 2019-07-07     -4.4     13.6\n##  8 2019-07-08      2.1     19.2\n##  9 2019-07-09      0       22.5\n## 10 2019-07-10      2       19.5\n## 11 2019-07-11      4.3     21.4\n## 12 2019-07-12      8.7     23.3\n## 13 2019-07-13     12.9     23.1\n## 14 2019-07-14     13       17.4"},{"path":"comeco.html","id":"importando-arquivos-do-excel","chapter":"Capítulo 2 Começando com o R","heading":"2.6.2 Importando arquivos do Excel","text":"Para importar arquivos Excel, existem função read_excel pacote readxl.","code":"\nbflor <- readxl::read_excel(\"data/bflor.xlsx\")\nbflor## # A tibble: 54 × 3\n##    especie     n comprimento\n##    <chr>   <dbl>       <dbl>\n##  1 Hb          1        47.1\n##  2 Hb          2        46.8\n##  3 Hb          3        46.8\n##  4 Hb          4        47.1\n##  5 Hb          5        46.7\n##  6 Hb          6        47.4\n##  7 Hb          7        46.4\n##  8 Hb          8        46.6\n##  9 Hb          9        48.1\n## 10 Hb         10        48.3\n## # … with 44 more rows"},{"path":"comeco.html","id":"o-operador-pipe","chapter":"Capítulo 2 Começando com o R","heading":"2.7 O operador pipe: %>%","text":"O operador pipe %>% é uma ferramenta muito útil para expressar uma sequência de ações sobre um objeto. Foi introduzido pela primeira vez pacote magrittr com o objetivo de facilitar programação e melhorar e legibilidade código. Sempre carregue o pacote magrittr antes de usar o pipe.exemplo abaixo, duas linhas de código são equivalentes: aplica-se função f ao objeto x.Veja abaixo o pipe em ação:caso de uma função com vários argumentos, o pipe passa o objeto para primeira posição da função, o argumento mais à esquerda:caso de ser necessário que o objeto seja passado para outro argumento à direita, que não seja o primeiro, utilizamos um . como marcador:","code":"\nlibrary(magrittr)\nf(x)\nx %>% f() # O pipe passa o objeto x para dentro da função f\nx <- c(1, 2, 3, 5, 8, 13, 21) # criar um vetor x\nx %>% add(2) # somar 2 a cada elemento do vetor x## [1]  3  4  5  7 10 15 23\nx %>% \"+\"(2) # equivalente à operação anterior## [1]  3  4  5  7 10 15 23\nx %>%\n  \"*\"(3) %>%\n  \"+\"(1) %>%\n  \"^\"(2) # várias operações aplicadas sequencialmente ao vetor x## [1]   16   49  100  256  625 1600 4096\nx %>% sum() # soma os elementos do vetor## [1] 53\nsample(x, size = 1)## [1] 1\nx %>% sample(size = 1) # idem ao anterior com o pipe passando o objeto x para a função sample## [1] 5\niris %>%\n  lm(Petal.Length ~ Species, data = .) # o objeto iris é passado para o argumento data com um .## \n## Call:\n## lm(formula = Petal.Length ~ Species, data = .)\n## \n## Coefficients:\n##       (Intercept)  Speciesversicolor   Speciesvirginica  \n##             1.462              2.798              4.090"},{"path":"comeco.html","id":"tidydata","chapter":"Capítulo 2 Começando com o R","heading":"2.8 Organização dos dados: Tidy data","text":"Para facilitar análises, é importante que os dados estejam organizados em um formato consistente, chamado de Tidy Data (WICKHAM (2014)). regras gerais para este formato são:Cada variável deve estar em uma coluna;Cada observação deve estar em uma linha;Cada valor deve ter sua própria célula.Uma função bastante útil para organizar os dados fomato tidy é função tidyr::pivot_longer14.Considere o conjunto de dados presente nesta planilha Excel: liquido.xlsx (Figura 2.4)\nFigura 2.4: Exemplo de dados não organizados formato tidy em uma planilha Excel.\nOs dados foram digitados de modo que os valores da variável tempo estão espalhados por 4 colunas. variável repetição (implícita) está em uma linha (cabeçalho das colunas) e o nome das colunas (Tempo) está em uma célula mesclada.Ao importar este arquivo com função readxl::read_excel temos como resultado:Observamos que primeira linha (células mescladas) da planilha bagunçou ainda mais o resultado. Vamos importar novamente exlcuindo primeira linha com o argumento skip = 1.Para transformar o data-frame formato tidy, utilizamos função tidyr::pivot_longer:cols: colunas serem transformadas para o formato tidy;names_to: nome da nova coluna criada partir das informações armazenadas originalmente nos cabeçalhos das colunas;values_to: nome da nova coluna criada partir dos valores armazenados nas células.O caminho inverso também pode ser feito, transformando um data-frame formato longo para o formato wide com função tidyr::pivot_wider","code":"\nmessy_data <- readxl::read_excel(\"data/liquido.xlsx\")## New names:\n## • `` -> `...1`\n## • `` -> `...3`\n## • `` -> `...4`\n## • `` -> `...5`\nmessy_data## # A tibble: 4 × 5\n##   ...1    Tempo  ...3  ...4  ...5\n##   <chr>   <dbl> <dbl> <dbl> <dbl>\n## 1 Líquido     1     2     3     4\n## 2 Água       12    15    14    11\n## 3 Óleo       29    26    24    23\n## 4 Álcool      6     7     9     4\nmessy_data <- readxl::read_xlsx(\"data/liquido.xlsx\", skip = 1)\nmessy_data## # A tibble: 3 × 5\n##   Líquido   `1`   `2`   `3`   `4`\n##   <chr>   <dbl> <dbl> <dbl> <dbl>\n## 1 Água       12    15    14    11\n## 2 Óleo       29    26    24    23\n## 3 Álcool      6     7     9     4\ntidy_data <- tidyr::pivot_longer(messy_data, cols = 2:5, names_to = \"rep\", values_to = \"tempo\")\ntidy_data## # A tibble: 12 × 3\n##    Líquido rep   tempo\n##    <chr>   <chr> <dbl>\n##  1 Água    1        12\n##  2 Água    2        15\n##  3 Água    3        14\n##  4 Água    4        11\n##  5 Óleo    1        29\n##  6 Óleo    2        26\n##  7 Óleo    3        24\n##  8 Óleo    4        23\n##  9 Álcool  1         6\n## 10 Álcool  2         7\n## 11 Álcool  3         9\n## 12 Álcool  4         4"},{"path":"rmarkdown-1.html","id":"rmarkdown-1","chapter":"Capítulo 3 RMarkdown","heading":"Capítulo 3 RMarkdown","text":"","code":""},{"path":"rmarkdown-1.html","id":"criando-um-arquivo-rmd","chapter":"Capítulo 3 RMarkdown","heading":"3.1 Criando um arquivo Rmd","text":"Para criar um arquivo tipo Rmd, clique em File -> New File -> R Markdown.\nFigura 3.1: Criando um arquivo R Markdown.\nVárias opções estão disponíveis por padrão. Escolha aquela que julgar mais adequada ou então clique botão Create Empty Document.Um arquivo Rmd é composto por três componentes básicos: Cabeçalho, Texto e Código.Abaixo, um exemplo cabeçalho de um arquivo Rmd que exporta formato HTML:Este cabeçalho deve ser escrito entre --- (traço triplo) e utiliza síntaxe YAML (pt.wikipedia.org/wiki/YAML).O texto (ou narrativa) inicia logo após o cabeçalho e segue síntaxe demonstrada na seção 3.2.O código inicia com ```{r} (aspas triplas) em que r indica linguagem utilizada e termina com ``` (aspas triplas) novamente. Opções código podem ser escritas dentro das chaves: ```{r, .width=\"90%\"}.Para renderizar o arquivo, basta clicar botão Knit ou então utilizar o atalho Ctrl + Shift + K","code":"---\ntitle: \"Olá R Markdown\"\nauthor: \"Fulano\"\ndate: \"2022-04-19\"\noutput: html_document\n---"},{"path":"rmarkdown-1.html","id":"rmdsintaxe","chapter":"Capítulo 3 RMarkdown","heading":"3.2 Síntaxe da linguagem R Markdown","text":"síntaxe da linguagem RMarkdown é bastante simples mas poderosa. Neste capítulo, serão apresentados os principais elementos.separação entre os parágrafos deve ser feita com dois espaços verticais (enter).Para deixar um texto em itálico, este deve ser escrito entre * (asterisco simples): *itálico* = itálico. Já para deixar o texto em negrito, este deve ser escrito entre ** (asterisco duplo): **negrito** = negrito. E para itálico e negrito? adivinhem, *** (asterisco triplo): ***itálico e negrito*** = itálico e negrito.Sobrescrito deve ficar entre ^ (circunflexo): m^3^/s = m3/s. Já o subscrito é escrito entre ~ (til): H~2~O = H2O.Um link para uma página externa: [Site da UFSC](https://ufsc.br) = Site da UFSCUma lista marcada deve ter cada item precedido por um * (asterisco):* item 1* item 2Retorna:item 1item 2Uma lista numerada dever ter cada item precedido por um número:1. item 11. item 21. item 3Retorna:item 1item 2item 3Os títulos das seções são escritos após # (sustenido ou hashtag).Mais opções podem ser encontradas na folha de dicas RStudio: R Markdown Cheat SheetMuito mais informações podem ser encontradas neste livro bastante completo: R Markdown: Definitive Guide","code":"# Título nível 1\n\n## Título nível 2\n\n### Título nível 3"},{"path":"rmarkdown-1.html","id":"formatos-de-saída","chapter":"Capítulo 3 RMarkdown","heading":"3.3 Formatos de saída","text":"Os principais formatos de saída para documentos 15 são:html_document - saída em formato HTMLpdf_document - saída em formato PDFword_document - saída em formato Word (.doc)odt_document - saída em formato OpenDocument (.odt) para OpenOffice e LibreOfficertf_document - saída em formato Rich Text Format (.rtf)","code":""},{"path":"bio.html","id":"bio","chapter":"Introdução - (bio)Estatística","heading":"Introdução - (bio)Estatística","text":"","code":""},{"path":"alguns-conceitos-básicos.html","id":"alguns-conceitos-básicos","chapter":"Capítulo 4 Alguns conceitos básicos","heading":"Capítulo 4 Alguns conceitos básicos","text":"","code":""},{"path":"alguns-conceitos-básicos.html","id":"população-e-amostra","chapter":"Capítulo 4 Alguns conceitos básicos","heading":"4.1 População e amostra","text":"PopulaçãoÉ coleção inteira de indivíduos ou objetos ser considerada ou estudada. Em geral, há infinitos objetos em uma população ou, então, tantos que não podemos olhar para todos eles.AmostraÉ um subconjunto da população inteira, uma pequena seleção de indivíduos ou objetos extraídos da coleção inteira. seleção de uma amostra envolve utilização de procedimentos específicos.\nFigura 4.1: População vs Amostra\n","code":""},{"path":"alguns-conceitos-básicos.html","id":"variável","chapter":"Capítulo 4 Alguns conceitos básicos","heading":"4.2 Variável","text":"É uma característica de um indivíduo em uma população de interesse. Pode assumir valores diferentes para indivíduos diferentes. Esta característica pode ser observada ou mensurada nos indivíduos que compõem amostra ou população.Exemplo 4.1  (Nível de potássio em bananas) Muitos estudos de pesquisa sugerem que bananas podem ser uma cura natural para diferentes doenças. bananas tem alto teor de ferro, que pode ajudar pessoas que sofrem de anemia, e há um antiácido nas bananas que pode ajudar aos que sofrem de azia. Um novo estudo se refere ao nível de potássio em uma banana típica. Cem bananas são selecionadas de todas partes mundo e mede-se e registra-se cuidadosamente o nível de potássio em cada uma delas. Descreva população, amostra e variável nesse problema.SOLUÇÃOA população consiste em todas bananas em todo o mundo. Embora essa população não seja infinita, certamente não podemos examinar cada banana unitariamente.amostra são 100 bananas selecionadas aleatoriamente. Esse é um sub-conjunto ou seleção (ou, bem, um cacho) da população.variável nesse problema é o nível de potássio. Essa característica será cuidadosamente medida para cada banana, e os dados serão resumidos ou usados para se tirar uma conclusão.","code":""},{"path":"alguns-conceitos-básicos.html","id":"tipos-de-variáveis","chapter":"Capítulo 4 Alguns conceitos básicos","heading":"4.2.1 Tipos de variáveis","text":"Qualitativa ou Categórica: Posiciona um indivíduo em um de diversos grupos ou categorias. Também podemos dizer que expressa uma qualidade indivíduo.\nNominais: São puramente qualitativas e não ordenadas, como cor de uma flor, gênero de um mamífero, formato de uma folha, etc.\nOrdinais: Podem ser colocados em ordem, como escalas de Likert (por exemplo, classifique de 0 5, com 0 para realmente não gosto e 5 para realmente gosto), comportamento de um animal (agressivo, neutro, submissivo), etc.\nNominais: São puramente qualitativas e não ordenadas, como cor de uma flor, gênero de um mamífero, formato de uma folha, etc.Ordinais: Podem ser colocados em ordem, como escalas de Likert (por exemplo, classifique de 0 5, com 0 para realmente não gosto e 5 para realmente gosto), comportamento de um animal (agressivo, neutro, submissivo), etc.Quantitativa ou Numérica: Assume valores numéricos e operações aritméticas (adição e cálculo de médias) fazem sentido.\nContínuas: Podem assumir qualquer valor em um intervalo, como o comprimento caule de uma planta, temperatura corporal de um primata, etc.\nDiscretas: Podem assumir apenas um número limitado de valores, como o número de pétalas de uma flor, número de filhotes de uma ave, etc.\nContínuas: Podem assumir qualquer valor em um intervalo, como o comprimento caule de uma planta, temperatura corporal de um primata, etc.Discretas: Podem assumir apenas um número limitado de valores, como o número de pétalas de uma flor, número de filhotes de uma ave, etc.Exemplo 4.2  (Tipos e variáveis) Dados de um estudo podem conter valores de muitas variáveis para cada um dos sujeitas estudo. Quais das seguintes variáveis são categóricas e quais são quantitativas?GêneroIdadeCorFumantePressão sanguínea sistólicaNível de cálcio sangueSOLUÇÃOCategóricas: gênero (masculino ou feminino), cor (asiática, negra, branca, outra), fumante (sim ou não).Quantitativas: idade (em anos), pressão sanguínea (milímetros de mercúrio), nível de cálcio (microgramas por mililitro).Em algumas situações, variáveis categóricas podem ser transformadas em variáveis quantitativas e vice-versa.","code":""},{"path":"alguns-conceitos-básicos.html","id":"variáveis-derivadas","chapter":"Capítulo 4 Alguns conceitos básicos","heading":"4.2.2 Variáveis derivadas","text":"maior parte das variáveissão obtidas por meio de medidas e observações diretas. entanto, há uma importante classe de variáveis denominadas derivadas, que são baseadas em duas ou mais medições obtidas independentemente. Alguns exemplos são: razão, porcentagem, índice e taxa.","code":""},{"path":"alguns-conceitos-básicos.html","id":"estatística-descritiva-vs-estatística-inferencial","chapter":"Capítulo 4 Alguns conceitos básicos","heading":"4.3 Estatística descritiva vs Estatística inferencial","text":"Estatística descritiva: Utiliza métodos gráficos e numéricos para descrever, organizar e resumir dados. É uma Análise exploratória.Estatística descritiva: Utiliza métodos gráficos e numéricos para descrever, organizar e resumir dados. É uma Análise exploratória.Estatística inferencial: Utiliza técnicas e métodos para análise de um conjunto de dados pequeno e específico para se extrair uma conclusão sobre uma coleção maior, mais geral, de dados. Os procedimentos da inferência estatística nos permitem usar os dados para tirar conclusões e avaliar riscos.Estatística inferencial: Utiliza técnicas e métodos para análise de um conjunto de dados pequeno e específico para se extrair uma conclusão sobre uma coleção maior, mais geral, de dados. Os procedimentos da inferência estatística nos permitem usar os dados para tirar conclusões e avaliar riscos.Exemplo 4.3  (Descritiva vs Inferencial) Determine se cada um dos seguintes problemas é uma estatística descritiva ou inferencial.O Departamento de Transporte mantém registros referentes todos os caminhões parados para inspeção. Um relatório sobre essas inspeções lista, por carga, proporção de todos os caminhões parados.Um pesquisador obtém uma amostra aleatória de corujas selvagens e mede o quanto elas podem virar o pescoço. Os dados são usados para se concluir que uma coruja pode virar seu pescoço mais de 120 graus partir da posição de frente.Uma instalação de pesquisa da Marinha faz vários testes para verificar integridade estrutural de um novo submarino. Um relatório laboratório afirma que embarcação pode suportar pressão profundidades de, máximo, 800 pés (243,84 m).Um inspetor de segurança seleciona uma amostra de prédios de apartamentos e verifica escadas de incêndio em cada um deles. proporção de escadas quebradas na amostra é usada para estimar proporção de escadas quebradas em toda cidade.SOLUÇÃODescritivoInferencialInferencialInferencial","code":""},{"path":"alguns-conceitos-básicos.html","id":"estudo-observacional-vs-estudo-experimental","chapter":"Capítulo 4 Alguns conceitos básicos","heading":"4.4 Estudo observacional vs Estudo experimental","text":"Estudo observacional: Observamos resposta para variáveis específicas para cada individuo. O objetivo de um estudo observacional é descrever algum grupo ou situação.Estudo experimental: Investigamos os efeitos de certas condições sobre indivíduos ou objetos na amostra. Os indivíduos são associados aleatoriamente grupos específicos e certos fatores são sistematicamente controlados, ou impostos, para se investigar ou isolar efeitos específicos. O pesquisador impõe deliberadamente algum tratamento aos indivíduos para observar suas respostas.Exemplo 4.4  (Um estudo observacional) Um estudo acompanhou 130 mil pessoas, que bebiam cerveja, vinho ou licor, durante 12 anos. Foram documentados os casos de infarto miocárdio. O estudo mostrou que ocorriam 35% menos mortes por infarto entre os que tomavam vinho (tinto ou branco) comparado aos que bebiam cerveja.Exemplo 4.5  (Um estudo experimental) Um agrônomo afirma que um novo fertilizante orgânico, em comparação com marca líder, aumenta produção e o tamanho dos tomates. Para o teste dessa afirmativa, pês de tomate são associados aleatoriamente um de dois grupos: m grupo é cultivado com o fertilizante líder e o outro grupo, com o novo produto. tempo da colheita, registram-se o tamanho e o peso de cada tomate, juntamente com o total de tomates por pé. Os dados coletados desse experimento são usados para comparar os dois fertilizantes.","code":""},{"path":"alguns-conceitos-básicos.html","id":"confundimento","chapter":"Capítulo 4 Alguns conceitos básicos","heading":"4.4.1 Confundimento","text":"O confundimento ocorre quando vários fatores juntos contribuem para um efeito, mas nenhuma causa única pode ser isolada.Estudos observacionais falham, em geral, porque variável explicativa se confunde com variáveis ocultas.Voltando ao exemplo vinho…pessoas que preferem vinho são diferentes daquelas que bebem cerveja. Os bebedores de vinho, como um grupo, são mais ricos e mais bem educados, comem mais frutas e vegetais e menos frituras. Sua dieta contém menos gordura e menos colesterol.variável explicativa (Qual tipo de bebida alcoólica você bebe com mais frequência?) é confundida com muitas variáveis ocultas (educação, riqueza, alimnetação e outras).Voltando ao exemplo tomate…Suponha que os pés de tomate em um dos grupos sejam regados com mais frequência e/ou expostos mais luz sol.Se os pés de tomate que receberam o novo fertilizante forem sujeitos essas condições diferentes (favoráveis) de crescimento, uma diferença na produção não poderá ser atribuída ao novo produto.Exemplo 4.6  (Aquecimento global) Registros instrumentais mostram um aumento nas temperaturas médias globais da superfície aérea e oceano da ordem de 0,5°C durante o século XX. Essa tendência é também evidente na redução da extensão da capa de neve, da taxa acelerada aumento nível mar e dos tempos de chegada e acasalamento de pássaros migratórios, que estão ocorrendo mais cedo. Esse aquecimento global coincide com mudanças dramáticas na composição gás atmosférico devido à atividade humana, por exemplo, queima de combustíveis fósseis.Os registros clima estão sujeitos um grande e incerto nível de variabilidade.evidência aquecimento global é experimental ou observacional?Qual variável explicativa influencia mudança climática?Qual variável oculta pode estar confundida com essa variável explicativa?SOLUÇÃOObservacional.Explicativa: atividade humana.Oculta: variabilidade natural ambiente (por exemplo, idades glaciais anteriores).O Comitê da Ciência da Mudança Climática afirma: “Por causa grande e ainda incerto nível de variabilidade natural inerente ao registro clima…, uma ligação de causalidade entre o lançamento de gases efeito estufa na atmosfera e mudanças climáticas observadas durante o século XX não pode ser estabelecida sem equívocos.”","code":""},{"path":"gráficos-estatísticos.html","id":"gráficos-estatísticos","chapter":"Capítulo 5 Gráficos estatísticos","heading":"Capítulo 5 Gráficos estatísticos","text":"Uma imagem vale mais que mil palavrasOs gráficos estatísticos são utilizados para fazer uma representação visual dos dados. São elaborados para serem vistos por você e por outras pessoas, por isso, sempre haverá um certo nível de subjetividade na interpretação gráfico.Não há (muitas) regras na elaboração dos gráficos, pelo contrário, temos liberdade para elaborá-los das forma que melhor nos convém. entanto, existem guias gerais bem estabelecidas que facilitam o processo de escolha tipo de gráfico mais adequado para o seu conjunto de dados. Em outras palavras, uma boa metodologia aplicada na construção dos gráficos é extremamente útil para seu correto entendimento e interpretação, seja qual o público alvo.Figura 5.1 vemos um exemplo de um gráfico ruim. Há uma quantidade considerável de poluição visual; barras são difíceis de comparar devido à perspectiva “3D”; os rótulos estão duplicados, na legenda e eixo vertical; sombras não acrescentam nenhuma informação; escolha das cores não foi muito bem feita.\nFigura 5.1: Um gráfico com poluição visual e de gosto duvidoso.\n","code":""},{"path":"gráficos-estatísticos.html","id":"o-pacote-ggplot2","chapter":"Capítulo 5 Gráficos estatísticos","heading":"5.1 O pacote ggplot2","text":"O pacote ggplot2 foi criado por Hadley Wickham baseado em um conceito denominado “Gramática de Gráficos” (Grammar Graphics).De um modo geral, criação de gráficos com o ggplot2 executa o mapeamento (mapping) dos dados para propriedades estéticas (aes) e geométricas (geom_*). Ainda, podem ser executadas transformações estatísticas (stat_*) e divisões (facet_*).\nTodas essas camadas combinadas irão resultar gráfico final.O primeiro passo é chamar funçao ggplot (sem o número 2 final!). O argumento data recebe o conjunto de dados (data.frame) que contém os valores. Para este primeiro exemplo, vamos utilizar o conjunto de dados gapminder.\nAinda, vamos mapear o eixo x para variável gdpPercap (inglês, PIB per capita, em US Dollar) e o eixo y para variável lifeExp (inglês, expectativa de vida ao nascer, em anos). Fica assim:\nFigura 5.2: “Pano de fundo” para um gráfico criado com o ggplot2\nOps, o gráfico resultante está vazio! O que aconteceu? Esta função cria apenas o “pano de fundo” para o gráfico, uma vez que ainda não definimos nenhuma geometria para preenchê-lo.Para completar o gráfico, basta digitar o sinal de adição + e chamar alguma função tipo geom_*, por exemplo, geom_point para um gráfico de pontos 16. Na prática, estamos adicionando (+) mais uma camada ao gráfico.\nFigura 5.3: Gráfico de dispersão entre o PIB per capita (USS$) e expectativa de vida ao nascer (anos).\nEm geral, todos os gráficos produzidos com o ggplot seguem praticamente mesma receita:Para simplificar ainda mais o código, é possível suprimir o nome dos argumentos data e mapping, pois são argumentos muito comuns em todos os gráficos criados com o ggplot2. Por isso, de agora em diante, neste livro, estes nomes não serão mais escritos.\nFigura 5.4: Outro código que produz um gráfico idêntico ao da Figura 5.3\n","code":"\nlibrary(gapminder) # carregar os dados gapminder\nggplot(\n  data = gapminder,\n  mapping = aes(x = gdpPercap, y = lifeExp)\n)\nggplot(\n  data = gapminder,\n  mapping = aes(x = gdpPercap, y = lifeExp)\n) +\n  geom_point()ggplot(\n  data = <data>,\n  mapping = aes(x = <variável x>, \n                y = <variável y>,\n                <...> = <...>)\n) +\n  geom_*(<...>) +\n  <...>\nggplot(\n  gapminder,\n  aes(x = gdpPercap, y = lifeExp)\n) +\n  geom_point()"},{"path":"gráficos-estatísticos.html","id":"criando-gráficos-do-ggplot-como-objetos","chapter":"Capítulo 5 Gráficos estatísticos","heading":"5.2 Criando gráficos do ggplot como objetos","text":"Uma forma bastante conveniente de trabalhar com os gráficos é armazenar em objetos.Neste código, criamos um objeto denominado p 17 que contém informações básicas gráfico. Na sequ~encia, podemos adicionar mais elementos neste mesmo gráfico apenas adicionando (+) alguma função ao objeto.\nFigura 5.5: Adicionando uma camada geom_point() ao objeto p\n\nFigura 5.6: Adicionando uma camada geom_smooth() ao objeto p\n\nFigura 5.7: Adicionando várias camadas ao objeto p\n","code":"\np <- ggplot(\n  gapminder,\n  aes(x = gdpPercap, y = lifeExp)\n)\np +\n  geom_point()\np +\n  geom_smooth()## `geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\np +\n  geom_point() +\n  geom_smooth()## `geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'"}]
